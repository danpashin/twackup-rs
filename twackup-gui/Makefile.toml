[config]
default_to_workspace = false
skip_core_tasks = true
skip_git_env_info = true
skip_rust_env_info = true

[env]
CARGO_MAKE_CRATE_VERSION = { script = ["xcrun xcodebuild -showBuildSettings | grep MARKETING_VERSION | tr -d 'MARKETING_VERSION ='"] }
GUI_ARCHIVE_PATH = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/Twackup.xcarchive"
GUI_APP_DIR = "${GUI_ARCHIVE_PATH}/Products/Applications/Twackup.app"
XCODE_SCHEME = "Twackup"
ARTIFACTS_OUTPUT_DIR = "${ARTIFACTS_DIR}"

DEB_NAME = "Twackup (GUI)"
DEB_IDENTIFIER = "ru.danpashin.twackup-gui"
DEB_SECTION = "Utilities"
DEB_PRIORITY = "optional"
DEB_ARCHITECTURE = "iphoneos-arm"
DEB_DEPENDS = "firmware (>= 14.0), com.opa334.libsandy"
DEB_CHANGELOG_FILE = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/changelog"
DEB_HOMEPAGE = "https://moreinfo.thebigboss.org/moreinfo/depiction.php?file=twackupDp"
DEB_AUTHOR = "DanP"
DEB_LICENSE = "GPL-3.0-only"
DEB_DESCRIPTION = "Safe and fast GUI utility for rebuilding DEBs and backing up packages"

[tasks.xcode-run-build]
private = true
command = "xcrun"
args = [
    "xcodebuild",
    "clean",
    "archive",
    "-archivePath", "${GUI_ARCHIVE_PATH}",
    "-scheme", "${XCODE_SCHEME}",
    "-workspace", "Twackup.xcworkspace",
    "CODE_SIGN_IDENTITY=",
    "CODE_SIGNING_REQUIRED="
]

[tasks.sign]
command = "ldid"
private = true
args = ["-S${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/twackup-gui/entitlements.plist", "${GUI_APP_DIR}"]

[tasks.build-and-sign]
private = true
run_task = { name = ["xcode-run-build", "sign", "copy-dsym"] }

[tasks.copy-dsym]
private = true
cwd = "${GUI_ARCHIVE_PATH}/dSYMs"
script = """
DEST_DIR="${ARTIFACTS_OUTPUT_DIR}/Twackup-${CARGO_MAKE_CRATE_VERSION}.dSYM"
rm -rf "${DEST_DIR}"
mv -v Twackup.app.dSYM "${DEST_DIR}"
"""

[tasks.create-deb]
private = true
cwd = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}"
command = "bundle"
args = [
    "exec", "fpm",
    "--input-type", "dir",
    "--output-type", "deb",
    "--force",
    "--prefix", "${DEB_PREFIX}",
    "--package", "${ARTIFACTS_OUTPUT_DIR}/${DEB_IDENTIFIER}_${CARGO_MAKE_CRATE_VERSION}_${DEB_ARCHITECTURE}.deb",
    "--deb-no-changelog",
    "--log", "warn",
    "--name", "${DEB_IDENTIFIER}",
    "--category", "${DEB_SECTION}",
    "--depends", "${DEB_DEPENDS}",
    "--architecture", "${DEB_ARCHITECTURE}",
    "--maintainer", "${DEB_AUTHOR}",
    "--deb-priority", "${DEB_PRIORITY}",
    "--description", "${DEB_DESCRIPTION}",
    "--version", "${CARGO_MAKE_CRATE_VERSION}",
    "--license", "${DEB_LICENSE}",
    "--vendor", "",
    "--deb-changelog", "${DEB_CHANGELOG_FILE}",
    "--url", "${DEB_HOMEPAGE}",
    "--deb-field", "Name: ${DEB_NAME}",
    "${GUI_APP_DIR}=/Applications",
    "${CARGO_MAKE_WORKING_DIRECTORY}/assets/TwackupGUI.plist=/Library/libSandy/TwackupGUI.plist",
    "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/changelog=/usr/share/doc/${DEB_IDENTIFIER}/changelog",
]

[tasks.build-rootfull]
category = "Build"
description = "Build rootfull DEB for classic jailbreaks"
run_task = { name = ["build-and-sign", "create-deb"] }

[tasks.build-rootfull.env]
DEB_ARCHITECTURE = "iphoneos-arm"
DEB_PREFIX = ""
XCODE_SCHEME = "Twackup (Rootfull)"
ARTIFACTS_OUTPUT_DIR = "${ARTIFACTS_ROOTFULL_DIR}"

[tasks.build-rootless]
category = "Build"
description = "Build rootless DEB for use on iOS 15 and higher"
run_task = { name = ["build-and-sign", "create-deb"] }

[tasks.build-rootless.env]
DEB_ARCHITECTURE = "iphoneos-arm64"
DEB_PREFIX = "/var/jb"
XCODE_SCHEME = "Twackup (Rootless)"
ARTIFACTS_OUTPUT_DIR = "${ARTIFACTS_ROOTLESS_DIR}"
DEB_DEPENDS = "${DEB_DEPENDS}, libroot-dopamine"

[tasks.build-ipa]
category = "Build"
description = "Build ipa file"
dependencies = ["build-and-sign"]
cwd = "${GUI_ARCHIVE_PATH}/Products"
script = """
mv Applications Payload
find Payload -type f \\( -perm +111 -or -name "*.dylib" \\) -exec xcrun bitcode_strip "{}" -r -v -o "{}" \\;
zip -rmT "${ARTIFACTS_DIR}/Twackup-${CARGO_MAKE_CRATE_VERSION}.ipa" Payload
"""

[tasks.build-all]
category = "Build"
description = "Build all available packages: rootfull/rootless debs and ipa file"
run_task = { name = ["build-rootfull", "build-rootless", "build-ipa"] }
